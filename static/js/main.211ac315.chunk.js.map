{"version":3,"sources":["components/layout/footer.js","components/layout/divider.js","components/layout/header.js","components/layout/main.js","components/layout/page-wrapper.js","theme/theme.js","components/progress/progress-bar.js","components/typography/heading.js","components/fsm/state-list.js","components/fsm/action-buttons.js","components/fsm/fsm.js","App.js","serviceWorker.js","index.js"],"names":["Footer","styled","div","theme","palette","silver","spacing","footer","iron","moss","Header","Main","main","snow","PageWrapper","cardinal","carmine","borderRadius","ProgressBarWrapper","percentage","width","ProgressBar","defaultProps","h3","StatesWrapper","StatesTitle","StatesList","StatesListItem","span","active","undefined","States","children","ActionButtonGroup","ActionButton","button","Array","prototype","removeDuplicates","from","Set","this","MachineWrapper","StateMachine","initialState","flow","state","states","Object","entries","map","actions","values","reduce","allActions","s","concat","on","action","currentState","signal","availableStates","hasOwnProperty","console","log","Fsm","props","machine","zero","START","running","PAUSE","RESET","END","paused","complete","useState","setState","progress","setProgress","useEffect","transition","interval","setInterval","clearInterval","handleChangeState","e","key","onClick","disabled","availableActions","includes","keys","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.211ac315.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const Footer = styled.footer(\n    ({ theme }) => `\n        background-color: ${ theme.palette.iron };\n        color: ${ theme.palette.moss };\n        padding: ${ theme.spacing };\n    `\n)\n","import styled from 'styled-components'\n\nexport const Divider = styled.div(\n    ({ theme }) => `\n        height: 10px;\n        width: 100%;\n        border-bottom: 1px solid ${ theme.palette.silver };\n        margin: ${ theme.spacing } auto;\n    `\n)\n","import styled from 'styled-components'\n\nexport const Header = styled.footer(\n    ({ theme }) => `\n        background-color: ${ theme.palette.iron };\n        color: ${ theme.palette.moss };\n        padding: ${ theme.spacing };\n    `\n)\n","import styled from 'styled-components'\n\nexport const Main = styled.main(\n    ({ theme }) => `\n        background-color: ${ theme.palette.snow };\n        color: ${ theme.palette.iron };\n        padding: ${ theme.spacing };\n        flex: 1;\n    `\n)","import styled from 'styled-components'\n\nexport const PageWrapper = styled.div`\n    // & * { border: 1px solid #f99; }\n    min-height: 100vh;\n    display: flex;\n    flex-direction: column;\n`\n","export const theme = {\n    palette: {\n        iron: '#48494b',\n        moss: '#8a9a5b',\n        snow: '#fffafa',\n        silver: '#d0d0d9',\n        cardinal: '#a31f34',\n        carmine: '#960018',\n    },\n    spacing: '2rem',\n    borderRadius: '5px',\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst ProgressBarWrapper = styled.div(\n    ({ theme, percentage, width = '100%' }) => `\n        border-bottom: 1px solid ${ theme.palette.moss };\n        position: relative;\n        height: ${ theme.spacing };\n        &::before {\n            content: \"${ percentage }%\";\n            position: absolute;\n            top: calc(100% + 10px);\n            left: 50%;\n            transform: translateX(-50%);\n            color: ${ theme.palette.silver };\n        }\n        &::after {\n            content: \"\";\n            position: absolute;\n            left: 0;\n            top: 0;\n            height: 100%;\n            width: ${ percentage }%;\n            background-color: ${ theme.palette.moss };\n        }\n    `\n)\nexport const ProgressBar = ({ percentage }) => {\n    return (\n        <ProgressBarWrapper percentage={ percentage } />\n    )\n}\n\nProgressBar.propTypes = {\n    percentage: PropTypes.number.isRequired,\n}\n\nProgressBar.defaultProps = {\n    percentage: 0,\n}\n","import styled from 'styled-components'\n\nexport const Heading = styled.h3(\n    ({ theme }) => `\n        color: ${ theme.palette.silver };\n    `\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StatesWrapper = styled.div(\n    ({ theme }) => `\n        width: 100%;\n        margin: auto;\n    `\n)\n\nconst StatesTitle = styled.div(\n    ({ theme }) => `\n        text-transform: uppercase;\n        letter-spacing: 2px;\n        color: ${ theme.palette.moss };\n        font-size: 80%;\n        background-color: ${ theme.palette.snow };\n        padding: calc(${ theme.spacing } / 4);\n        border-top: 1px solid ${ theme.palette.moss };\n        border-bottom: 1px solid ${ theme.palette.moss };\n    `\n)\n\nconst StatesList = styled.div(\n    ({ theme }) => `\n        display: flex;\n        flex-direction: column;\n        min-height: ${ theme.spacing };\n        @media (min-width: 768px) {\n            flex-direction: row;\n        }\n        justify-content: center;\n    `\n)\n\nexport const StatesListItem = styled.span(\n    ({ theme, active }) => `\n        text-align: center;\n        padding: calc(${ theme.spacing } / 4);\n        color: ${ theme.palette.moss };\n        font-size: 80%;\n        letter-spacing: 2px;\n        flex: 1;\n        transition: background-color 250ms;\n        background-color: ${ theme.palette.silver }22;\n        ${ active ? `\n            background-color: ${ theme.palette.moss };\n            color: ${ theme.palette.snow };\n            transition: opacity 200ms;\n            opacity: ${ active ? 1 : 0 };\n            content: \" *\";\n        ` : undefined }\n    `\n)\n\nexport const States = ({ children }) => {\n    return (\n        <StatesWrapper>\n            <StatesTitle>STATE</StatesTitle>\n            <StatesList>\n                { children }\n            </StatesList>\n        </StatesWrapper>\n    )\n}","import styled from 'styled-components'\n\nexport const ActionButtonGroup = styled.div(\n    ({ theme }) => `\n        display: flex;\n        min-height: 200px;\n        flex-direction: column;\n        justify-content: center;\n        margin: calc(${ theme.spacing } * 2) calc(${ theme.spacing }) calc(${ theme.spacing }) calc(${ theme.spacing });\n        align-items: stretch;\n        @media (min-width: 768px) {\n            margin: calc(${ theme.spacing } / 4);\n            flex-direction: row;\n            align-items: center;\n        }\n    `\n)\n\nexport const ActionButton = styled.button(\n    ({ theme }) => `\n        margin: 0.5rem 0.5rem;\n        padding: 0.25rem 0.5rem;\n        cursor: pointer;\n        &:disabled {\n            cursor: default;\n        }\n    `\n)\n\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { ProgressBar } from '../progress'\nimport { Heading } from '../typography'\nimport { Divider } from '../layout'\nimport { States, StatesListItem } from './state-list'\nimport { ActionButtonGroup, ActionButton } from './action-buttons'\n\nArray.prototype.removeDuplicates = function() {\n    return Array.from(new Set(this))\n}\n\nconst MachineWrapper = styled.div(\n    ({ theme }) => `\n        // & * {border: 1px solid ${ theme.palette.moss };}\n        border: 1px solid ${ theme.palette.moss };\n        border-radius: ${ theme.borderRadius };\n        text-align: center;\n        width: 90%;\n        max-width: 768px;\n        margin: auto;\n        // padding: ${ theme.spacing };\n    `\n)\n\n/**\n* StateMachine\n* @initalState  String, should be top-level key in `flow` parameter, described next\n* @flow         Object describing flow between states, e.g., { state1: { on: { actiona: state2 } }, state2: { on: { actionb: state1 } } }\n*/\nclass StateMachine {\n    constructor(initialState, flow) {\n        this.state = initialState\n        this.flow = flow\n        this.states = Object.entries(this.flow).map(([state, flow]) => state).removeDuplicates()\n        this.actions = Object.values(this.flow).reduce((allActions, s) => {\n            return allActions.concat(Object.entries(s.on).map(([action, nextState]) => action)).removeDuplicates()\n        }, [])\n    }\n\n    availableStates(currentState) {\n        const thisStateFlow = Object.entries(this.flow[currentState].on).map(([signal, nextState]) => nextState)\n        return thisStateFlow.removeDuplicates()\n    }\n\n    availableActions(currentState) {\n        const thisStateFlow = Object.entries(this.flow[currentState].on).map(([signal, nextState]) => signal)\n        return thisStateFlow.removeDuplicates()\n    }\n\n    transition(currentState, action) {\n        if (this.availableStates !== []) {\n            if (this.flow[currentState].hasOwnProperty('on') && this.flow[currentState].on.hasOwnProperty(action)) {\n                console.log(`transition: ${ currentState } -> ${ this.flow[currentState].on[action] }`)\n                return this.flow[currentState].on[action]\n            }\n        }\n        return currentState\n    }\n}\n\nconst INTERVAL = 25 // in milliseconds\nconst DISABLE_UNAVAILABLE_ACTIONS = true\n\nexport const Fsm = props => {\n    const machine = new StateMachine('zero', {\n        zero: {\n            on: {\n                START: 'running',\n            },\n        },\n        running: {\n            on: {\n                PAUSE: 'paused',\n                RESET: 'zero',\n                END: 'complete',\n            },\n        },\n        paused: {\n            on: {\n                START: 'running',\n                RESET: 'zero',\n            },\n        },\n        complete: {\n            on: {\n                RESET: 'zero',\n            },\n        },\n    })\n    const [state, setState] = useState(machine.state)\n    const [progress, setProgress] = useState(0)\n\n    useEffect(() => {\n        switch (state) {\n            case 'zero':\n                setProgress(0)\n                break\n            case 'running':\n                if (progress === 100) {\n                    setState(machine.transition(state, 'END'))\n                    return\n                }\n                const interval = setInterval(() => {\n                    setProgress(progress + 1)\n                }, INTERVAL)\n                return () => clearInterval(interval)\n            case 'complete':\n                setProgress(100)\n                break\n            default: // 'paused'\n                return\n        }\n    }, [state, progress])\n\n    const handleChangeState = action => e => setState(machine.transition(state, action))\n\n    return (\n        <MachineWrapper>\n            <ProgressBar percentage={ progress } />\n\n            <ActionButtonGroup>\n                {\n                    machine.actions.map(action => {\n                        // console.log(`available actions: ${ machine.availableActions(state).join(', ') }\\navailable states: ${ machine.availableStates(state).join(', ') }`)\n                        return (\n                            <ActionButton\n                                key={ action }\n                                onClick={ handleChangeState(action) }\n                                disabled={ DISABLE_UNAVAILABLE_ACTIONS && !machine.availableActions(state).includes(action) }\n                            >\n                                { action }\n                            </ActionButton>\n                        )\n                    })\n                }\n            </ActionButtonGroup>\n\n            <States>\n                {\n                    Object.keys(machine.flow).map(s => (\n                        <StatesListItem key={ s } active={ state === s }>{ s }</StatesListItem>\n                    ))\n                }   \n            </States>\n\n        </MachineWrapper>\n    )\n}\n\n","import React from 'react'\nimport { PageWrapper, Header, Main, Footer } from './components/layout'\nimport { ThemeProvider } from 'styled-components'\nimport { theme } from './theme'\nimport { Fsm } from './components/fsm'\n\nfunction App() {\n  return (\n    <ThemeProvider theme={ theme }>\n      <PageWrapper>\n        <Header>\n          ...\n        </Header>\n        <Main>\n          <Fsm />\n        </Main>\n        <Footer>\n          ...\n        </Footer>\n      </PageWrapper>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}